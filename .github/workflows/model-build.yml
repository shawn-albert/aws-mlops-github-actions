name: model-build

on:
  push:
    branches: [ model/* ]
    paths:
        - code/ml_lifecycle/6_train_model_tune_evaluate/**
env:
  APPLICATION_NAME: startupapp

jobs:
  build_image_push_to_ECR:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # see: https://github.com/aws-actions/amazon-ecr-login
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  submit_training_job:
    needs: [build_image_push_to_ECR]
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-py3:latest
    steps:
    - uses: actions/checkout@v2
    - name: Fire SageMaker
      id: sm_train
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PREFIX: ${{ secrets.PREFIX }}
        IAM_ROLE_NAME: ${{ secrets.IAM_ROLE_NAME }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        pip install --no-cache-dir --upgrade awscli pandas boto3 sagemaker requests fsspec s3fs tabulate
        python training-job.py
        cat details.txt >> report.md
        cml-send-comment report.md 

        launch-runner:    runs-on: ubuntu-latest    steps:      - uses: actions/checkout@v3      - uses: iterative/setup-cml@v1      - name: Deploy runner on AWS EC2        # Supports AWS, Azure, GCP, K8s        env:
            REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            cml runner launch \
            --cloud=aws \
            --cloud-region=us-west \
            --cloud-type=m5.2xlarge \
            --labels=cml-runner
    train-and-report:
      runs-on: [self-hosted, cml-runner]
      needs: launch-runner    timeout-minutes: 50400 # 35 days    container: docker://iterativeai/cml:0-dvc2-base1    steps:      - uses: actions/checkout@v3      - name: Train and Report        run: |
            pip install -r requirements.txt
            python train.py  # generate plot.png
            echo "## Report from your EC2 Instance" >> report.md
            cat metrics.txt >> report.md
            echo '![](./plot.png "Confusion Matrix")' >> report.md
            cml comment create report.md
          env:
            REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}